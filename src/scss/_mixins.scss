@mixin flex($flow: row nowrap, $align: center, $justify: flex-start, $inline: false) {
  @if ($inline) {
    display: inline-flex;
  } @else {
    display: flex;
  }
  flex-flow: $flow;
  align-items: $align;
  justify-content: $justify;
}

@mixin size($width, $height: $width, $force: false) {
  width: $width;
  height: $height;
  @if $force {
    min-width: $width !important;
    max-width: $width !important;
    min-height: $height !important;
    max-height: $height !important;
  }
}

@mixin bounds($top: unset, $right: unset, $bottom: unset, $left: unset) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin background($color: transparent, $blur) {
  background-color: $color;
  @if ($blur) {
    backdrop-filter: blur($blur);
  }
}

@mixin elevate($depth) {
  $top-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $top-blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $top-color: rgba(black, nth(0.12 0.16 0.19 0.25 0.3, $depth));
  $top-shadow: 0 $top-offset $top-blur $top-color;
  $bottom-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $bottom-blur: nth(1 3 3 5 6, $depth) * 4px;
  $bottom-color: rgba(black, nth(0.24 0.23 0.23 0.22 0.22, $depth));
  $bottom-shadow: 0 $bottom-offset $bottom-blur $bottom-color;
  box-shadow: $bottom-shadow, $top-shadow;
}

@mixin illuminate-text($color: white, $blur: 9px, $size: 9px) {
  $space: $size / 2;
  text-shadow: (-$space) (-$space) $blur $color, $space (-$space) $blur $color, $space $space $blur $color,
    (-$space) $space $blur $color;
}
